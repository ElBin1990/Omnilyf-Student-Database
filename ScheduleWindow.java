/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentdatabase;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import studentdatabase.model.*;
import studentdatabase.model.controller.Controller;

/**
 *
 * @author elshaday
 */
public class ScheduleWindow extends javax.swing.JFrame {

    Controller controller;
    List<Term> terms;
  
    List<Career> careers = new ArrayList();
    /**
     * Creates new form Schedule
     */
    public ScheduleWindow() throws SQLException {
        initComponents();
        
        controller = new Controller();
 
        //set terms
        terms = controller.getTerms();
        terms.forEach(term->
                termCombo.addItem(term.getTermId())
        ); 
        List<Student> students = controller.getAvailableStudents(termCombo.getSelectedItem().toString());
        studentsCount.setText("Available Students: " +students.size());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        termCombo = new javax.swing.JComboBox<>();
        termDuration = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        careerList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        studentsCount = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        tableView = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Select Term");

        termCombo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        termCombo.setMaximumRowCount(12);
        termCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termComboActionPerformed(evt);
            }
        });

        termDuration.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        termDuration.setForeground(new java.awt.Color(0, 0, 255));
        termDuration.setText("Term");

        careerList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                careerListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(careerList);

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Email Address", "Phone Number"
            }
        ));
        jScrollPane2.setViewportView(studentTable);
        studentTable.getAccessibleContext().setAccessibleName("");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("Show Careers");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 255));
        jButton5.setText("Generate Schedule");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 255));
        jButton2.setText("ClearALL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Schedule");

        studentsCount.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        studentsCount.setForeground(new java.awt.Color(51, 51, 255));
        studentsCount.setText("____");

        jButton3.setText("Available Students");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tableView.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tableView.setText("___");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                                .addComponent(termDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(termCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(75, 75, 75)
                                        .addComponent(studentsCount))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addGap(75, 75, 75)
                                        .addComponent(jButton3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(168, 168, 168))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(tableView)
                                .addGap(392, 392, 392))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(425, 425, 425)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(tableView)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(termDuration)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(termCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentsCount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3))
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void termComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termComboActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_termComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Term term = terms.get(termCombo.getSelectedIndex());
        String dateString = String.format("date  %s - %s ", term.getStartDate(), term.getEndDate() );
        termDuration.setText(dateString);
        
        careers = controller.getScheduleCareers(term.getTermId());
        
        DefaultListModel listModel = new DefaultListModel();
        careerList.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        careers.forEach(career-> listModel.addElement(career.getName()));
        careerList.setModel(listModel);        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void careerListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_careerListValueChanged
        // TODO add your handling code here:
        if (evt.getValueIsAdjusting() == false) {

            if (careerList.getSelectedIndex() != -1) {
                List<Student> students = controller.getStudents(careers, careerList.getSelectedValue(), termCombo.getSelectedItem().toString());
                clearTable();
                students.forEach(student -> updateTable(student));
                tableView.setText(String.format("Scheduled Students for term: %s and career: %s", termCombo.getSelectedItem().toString(),careerList.getSelectedValue() ) );
            }
        }
       
    }//GEN-LAST:event_careerListValueChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {

            System.out.println(termCombo.getSelectedItem().toString());
            if(controller.generateSchedule(termCombo.getSelectedItem().toString())){
                JOptionPane.showMessageDialog(null,"schedule generated!");
                System.out.println("schedule generated!");
                List<Student> students = controller.getAvailableStudents(termCombo.getSelectedItem().toString());
                studentsCount.setText("Available Students: " +students.size());
              
            }
            else{
                JOptionPane.showMessageDialog(null,"All students are scheduled for this term!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(OmnilyfDatabase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         if (JOptionPane.showConfirmDialog(this, "Are you sure you want to clear scheduled careers? " + JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            controller.clearCareers();
            controller.clearAvailable();
            controller.clearSchedule();
            DefaultListModel listModel = (DefaultListModel)careerList.getModel();
            listModel.removeAllElements();
            JOptionPane.showMessageDialog(null,"Schedule cleared!");
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        List<Student> students = controller.getAvailableStudents(termCombo.getSelectedItem().toString());
        clearTable();
        students.forEach(student -> updateTable(student));
        studentsCount.setText("Available Students: " +students.size());
        tableView.setText("Available Students for term: "+ termCombo.getSelectedItem().toString());
        
    }//GEN-LAST:event_jButton3ActionPerformed
    private JFrame ScheduleWindow;
    public void clearTable(){
        DefaultTableModel dm = (DefaultTableModel)studentTable.getModel(); 
        dm.setRowCount(0);
        studentTable.revalidate();
    }
    public void updateTable(Student student) {
       
        Object[] col = new Object[4];
        col[0] = student.getFirstname();
        col[1] = student.getLastname();
        col[2] = student.getEmail();
        col[3] = student.getPhone();
        
   
        DefaultTableModel dm = (DefaultTableModel)studentTable.getModel(); 
   
        dm.addRow(col);
        dm.fireTableDataChanged();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScheduleWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScheduleWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScheduleWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScheduleWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ScheduleWindow().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ScheduleWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> careerList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable studentTable;
    private javax.swing.JLabel studentsCount;
    private javax.swing.JLabel tableView;
    private javax.swing.JComboBox<String> termCombo;
    private javax.swing.JLabel termDuration;
    // End of variables declaration//GEN-END:variables
}
